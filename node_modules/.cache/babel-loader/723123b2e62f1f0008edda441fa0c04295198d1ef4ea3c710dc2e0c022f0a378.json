{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BlinkStar\\\\StarJobs Zim\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Navbar from \"./Navbar\"; // Adjust the import path as necessary\nimport Footer from \"./Footer\"; // Adjust the import path as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [job, setJob] = useState({\n    title: \"\",\n    description: \"\",\n    location: \"\",\n    salary: \"\",\n    company_name: \"\"\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setJob({\n      ...job,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"/api/jobs\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(job)\n      });\n      if (response.ok) {\n        alert(\"Job posted successfully!\");\n        setJob({\n          title: \"\",\n          description: \"\",\n          location: \"\",\n          salary: \"\",\n          company_name: \"\"\n        });\n      }\n    } catch (error) {\n      console.error(\"Error posting job:\", error);\n    }\n  };\n  const styles = {\n    container: {\n      fontFamily: \"Arial, sans-serif\",\n      backgroundColor: \"#f4f4f4\",\n      padding: \"20px\",\n      minHeight: \"100vh\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    form: {\n      background: \"white\",\n      borderRadius: \"8px\",\n      boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.1)\",\n      maxWidth: \"600px\",\n      margin: \"auto\",\n      padding: \"20px\",\n      flexGrow: 1\n    },\n    input: {\n      width: \"100%\",\n      padding: \"10px\",\n      margin: \"10px 0\",\n      border: \"1px solid #ccc\",\n      borderRadius: \"4px\",\n      boxSizing: \"border-box\"\n    },\n    button: {\n      backgroundColor: \"#007BFF\",\n      color: \"white\",\n      border: \"none\",\n      padding: \"10px 15px\",\n      borderRadius: \"4px\",\n      cursor: \"pointer\",\n      fontSize: \"16px\",\n      width: \"100%\"\n    },\n    heading: {\n      color: \"#333\",\n      textAlign: \"center\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.heading,\n      children: \"Post a Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Job Title\",\n        value: job.title,\n        onChange: handleChange,\n        required: true,\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        placeholder: \"Job Description\",\n        value: job.description,\n        onChange: handleChange,\n        required: true,\n        style: {\n          ...styles.input,\n          height: \"100px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"location\",\n        placeholder: \"Location\",\n        value: job.location,\n        onChange: handleChange,\n        required: true,\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"salary\",\n        placeholder: \"Salary\",\n        value: job.salary,\n        onChange: handleChange,\n        required: true,\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"company_name\",\n        placeholder: \"Company Name\",\n        value: job.company_name,\n        onChange: handleChange,\n        required: true,\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: styles.button,\n        children: \"Post Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"jwtPF73CY1m4ou97oVCSjadwcWw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","Navbar","Footer","jsxDEV","_jsxDEV","Dashboard","_s","job","setJob","title","description","location","salary","company_name","handleChange","e","name","value","target","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","alert","error","console","styles","container","fontFamily","backgroundColor","padding","minHeight","display","flexDirection","form","background","borderRadius","boxShadow","maxWidth","margin","flexGrow","input","width","border","boxSizing","button","color","cursor","fontSize","heading","textAlign","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","height","_c","$RefreshReg$"],"sources":["C:/Users/BlinkStar/StarJobs Zim/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Navbar from \"./Navbar\"; // Adjust the import path as necessary\r\nimport Footer from \"./Footer\"; // Adjust the import path as necessary\r\n\r\nconst Dashboard = () => {\r\n  const [job, setJob] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    location: \"\",\r\n    salary: \"\",\r\n    company_name: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setJob({ ...job, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(\"/api/jobs\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(job),\r\n      });\r\n      if (response.ok) {\r\n        alert(\"Job posted successfully!\");\r\n        setJob({\r\n          title: \"\",\r\n          description: \"\",\r\n          location: \"\",\r\n          salary: \"\",\r\n          company_name: \"\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error posting job:\", error);\r\n    }\r\n  };\r\n\r\n  const styles = {\r\n    container: {\r\n      fontFamily: \"Arial, sans-serif\",\r\n      backgroundColor: \"#f4f4f4\",\r\n      padding: \"20px\",\r\n      minHeight: \"100vh\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    form: {\r\n      background: \"white\",\r\n      borderRadius: \"8px\",\r\n      boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.1)\",\r\n      maxWidth: \"600px\",\r\n      margin: \"auto\",\r\n      padding: \"20px\",\r\n      flexGrow: 1,\r\n    },\r\n    input: {\r\n      width: \"100%\",\r\n      padding: \"10px\",\r\n      margin: \"10px 0\",\r\n      border: \"1px solid #ccc\",\r\n      borderRadius: \"4px\",\r\n      boxSizing: \"border-box\",\r\n    },\r\n    button: {\r\n      backgroundColor: \"#007BFF\",\r\n      color: \"white\",\r\n      border: \"none\",\r\n      padding: \"10px 15px\",\r\n      borderRadius: \"4px\",\r\n      cursor: \"pointer\",\r\n      fontSize: \"16px\",\r\n      width: \"100%\",\r\n    },\r\n    heading: {\r\n      color: \"#333\",\r\n      textAlign: \"center\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <Navbar />\r\n      <h2 style={styles.heading}>Post a Job</h2>\r\n      <form onSubmit={handleSubmit} style={styles.form}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder=\"Job Title\"\r\n          value={job.title}\r\n          onChange={handleChange}\r\n          required\r\n          style={styles.input}\r\n        />\r\n        <textarea\r\n          name=\"description\"\r\n          placeholder=\"Job Description\"\r\n          value={job.description}\r\n          onChange={handleChange}\r\n          required\r\n          style={{ ...styles.input, height: \"100px\" }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"location\"\r\n          placeholder=\"Location\"\r\n          value={job.location}\r\n          onChange={handleChange}\r\n          required\r\n          style={styles.input}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          name=\"salary\"\r\n          placeholder=\"Salary\"\r\n          value={job.salary}\r\n          onChange={handleChange}\r\n          required\r\n          style={styles.input}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"company_name\"\r\n          placeholder=\"Company Name\"\r\n          value={job.company_name}\r\n          onChange={handleChange}\r\n          required\r\n          style={styles.input}\r\n        />\r\n        <button type=\"submit\" style={styles.button}>\r\n          Post Job\r\n        </button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}