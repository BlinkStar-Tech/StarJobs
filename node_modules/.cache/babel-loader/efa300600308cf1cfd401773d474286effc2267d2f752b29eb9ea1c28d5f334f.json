{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BlinkStar\\\\job-board\\\\frontend\\\\src\\\\components\\\\JobList.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobList = () => {\n  // Example job data\n  const jobs = [{\n    id: 1,\n    title: \"Software Engineer\",\n    company: \"Tech Corp\",\n    region: \"Remote\",\n    type: \"Full Time\"\n  }, {\n    id: 2,\n    title: \"Product Manager\",\n    company: \"Innovate Inc\",\n    region: \"New York\",\n    type: \"Full Time\"\n  }, {\n    id: 3,\n    title: \"Data Analyst\",\n    company: \"Data Works\",\n    region: \"San Francisco\",\n    type: \"Part Time\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.jobList,\n    children: jobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.jobItem,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: job.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: job.company\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [job.region, \" - \", job.type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, job.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = JobList;\nconst styles = {\n  jobList: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  jobItem: {\n    border: \"1px solid #ddd\",\n    borderRadius: \"5px\",\n    padding: \"20px\",\n    margin: \"10px\",\n    width: \"80%\",\n    textAlign: \"left\"\n  }\n};\nexport default JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","JobList","jobs","id","title","company","region","type","style","styles","jobList","children","map","job","jobItem","fileName","_jsxFileName","lineNumber","columnNumber","_c","display","flexDirection","alignItems","border","borderRadius","padding","margin","width","textAlign","$RefreshReg$"],"sources":["C:/Users/BlinkStar/job-board/frontend/src/components/JobList.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst JobList = () => {\r\n  // Example job data\r\n  const jobs = [\r\n    {\r\n      id: 1,\r\n      title: \"Software Engineer\",\r\n      company: \"Tech Corp\",\r\n      region: \"Remote\",\r\n      type: \"Full Time\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Product Manager\",\r\n      company: \"Innovate Inc\",\r\n      region: \"New York\",\r\n      type: \"Full Time\",\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Data Analyst\",\r\n      company: \"Data Works\",\r\n      region: \"San Francisco\",\r\n      type: \"Part Time\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div style={styles.jobList}>\r\n      {jobs.map((job) => (\r\n        <div key={job.id} style={styles.jobItem}>\r\n          <h2>{job.title}</h2>\r\n          <p>{job.company}</p>\r\n          <p>\r\n            {job.region} - {job.type}\r\n          </p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  jobList: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  jobItem: {\r\n    border: \"1px solid #ddd\",\r\n    borderRadius: \"5px\",\r\n    padding: \"20px\",\r\n    margin: \"10px\",\r\n    width: \"80%\",\r\n    textAlign: \"left\",\r\n  },\r\n};\r\n\r\nexport default JobList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACpB;EACA,MAAMC,IAAI,GAAG,CACX;IACEC,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,mBAAmB;IAC1BC,OAAO,EAAE,WAAW;IACpBC,MAAM,EAAE,QAAQ;IAChBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,iBAAiB;IACxBC,OAAO,EAAE,cAAc;IACvBC,MAAM,EAAE,UAAU;IAClBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,cAAc;IACrBC,OAAO,EAAE,YAAY;IACrBC,MAAM,EAAE,eAAe;IACvBC,IAAI,EAAE;EACR,CAAC,CACF;EAED,oBACEP,OAAA;IAAKQ,KAAK,EAAEC,MAAM,CAACC,OAAQ;IAAAC,QAAA,EACxBT,IAAI,CAACU,GAAG,CAAEC,GAAG,iBACZb,OAAA;MAAkBQ,KAAK,EAAEC,MAAM,CAACK,OAAQ;MAAAH,QAAA,gBACtCX,OAAA;QAAAW,QAAA,EAAKE,GAAG,CAACT;MAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBlB,OAAA;QAAAW,QAAA,EAAIE,GAAG,CAACR;MAAO;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBlB,OAAA;QAAAW,QAAA,GACGE,GAAG,CAACP,MAAM,EAAC,KAAG,EAACO,GAAG,CAACN,IAAI;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC;IAAA,GALIL,GAAG,CAACV,EAAE;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMX,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAvCIlB,OAAO;AAyCb,MAAMQ,MAAM,GAAG;EACbC,OAAO,EAAE;IACPU,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE;EACd,CAAC;EACDR,OAAO,EAAE;IACPS,MAAM,EAAE,gBAAgB;IACxBC,YAAY,EAAE,KAAK;IACnBC,OAAO,EAAE,MAAM;IACfC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE,KAAK;IACZC,SAAS,EAAE;EACb;AACF,CAAC;AAED,eAAe3B,OAAO;AAAC,IAAAkB,EAAA;AAAAU,YAAA,CAAAV,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}